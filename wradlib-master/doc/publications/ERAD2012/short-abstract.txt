Session
-------
hydrological studies employing weather radars

Title
-----

wradlib - An Open Source Library for Weather Radar Data Processing

Authors
-------
Thomas Pfaff, Maik Heistermann, Stephan Jacobi


Abstract
--------

Weather radar data is potentially useful in meteorology, hydrology, disaster 
prevention and mitigation. Its ability to provide information on precipitation 
with high spatial and temporal resolution over large areas makes it an 
invaluable tool for short term weather forecasting or flash flood forecasting.

The indirect method of measuring the precipitation field, however, leads to a 
significant number of data artifacts, which usually must be removed or dealt 
with before the data can be used with acceptable quality. Data processing 
requires e.g. the transformation of measurements from polar to cartesian 
coordinates and from reflectivity to rainfall intensity, the composition of data 
from several radar sites in a common grid, clutter identification and removal, 
attenuation and VPR corrections, gauge adjustment and visualization.

The complexity of these processing steps is a major obstacle for many potential 
users in science and practice. Adequate tools are available either only at 
significant costs with no access to the uncerlying source code, or they are 
incomplete, insufficiently documented and intransparent.  

The wradlib project has been initiated in order to lower the barrier for 
potential users of weather radar data in the geosciences and to provide a common 
platform for research on new algorithms. wradlib is an open source library for 
the full range of weather radar related processing algorithms, which is well 
documented and easy to use.

The main parts of the library are currently implemented in the python 
programming language. Python is well known both for its ease of use as well as 
its ability to integrate code written in other programming languages like 
Fortran or C/C++. The well established Numpy and Scipy packages are used to 
provide decent performance for pure Python implementations of algorithms. We 
welcome contributions written in any computer language and will try to make them 
accessible from Python.

We would like to present the current state of this library together with a few 
showcase examples.
